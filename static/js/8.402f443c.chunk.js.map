{"version":3,"sources":["redux/actions/admin.action.js","redux/actions/index.js","screens/SinglePhotoScreen/index.jsx"],"names":["getLabel","type","AdminTypes","GET_LABEL_REQUEST","payload","addNewLabel","name","ADD_LABEL_REQUEST","addNewLabelPic","url","ADD_LABEL_PIC_REQUEST","getOnePicture","GET_PICTURE_REQUEST","getLabelPicture","labels","GET_PICTURE_LABEL_REQUEST","getPictureNotLabel","GET_PICTURE_NOT_LABEL_REQUEST","editLabelPicture","label","EDIT_PICTURE_LABEL_REQUEST","getAllPicture","GET_ALL_PICTURE_REQUEST","addNewPicture","taken","ADD_PICTURE_REQUEST","setAllButPics","val","SET_ALL_BUT_PICS","addToCluster","values","ADD_TO_CLUSTER_REQUEST","connect","state","admin","dispatch","bindActionCreators","AdminActions","props","canvasRef","React","createRef","canvasOverlayRef","useHistory","useState","currentStart","setCurrentStart","isAnnotation","setIsAnnotation","location","suggestions","setsuggestions","value","setValue","useEffect","drawImageFunc","ranArray","genArray","drawColours","ctx","current","getContext","img","Image","onload","drawImage","canvas","width","height","src","randArray","map","item","index","subitem","subindex","beginPath","arc","Math","PI","fillStyle","fill","stroke","closePath","finArray","i","tempArray","j","push","getSuggestions","escapedValue","trim","replace","regex","RegExp","filter","language","test","length","isAddNew","inputProps","placeholder","onChange","event","newValue","style","display","flexDirection","id","flex","className","position","top","left","image","onSelect","selectedId","console","log","data","ref","backgroundColor","onMouseDown","nativeEvent","offsetX","offsetY","onMouseMove","clearRect","rect","onMouseUp","save","opacity","window","innerHeight","onClick","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","onSuggestionSelected","picture"],"mappings":"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","file":"static/js/8.402f443c.chunk.js","sourcesContent":["import { AdminTypes } from \"../types\";\r\n\r\nexport const getLabel = () => ({\r\n  type: AdminTypes.GET_LABEL_REQUEST,\r\n  payload: {},\r\n});\r\n\r\nexport const addNewLabel = (name) => ({\r\n  type: AdminTypes.ADD_LABEL_REQUEST,\r\n  payload: { name },\r\n});\r\n\r\nexport const addNewLabelPic = (name, url) => ({\r\n  type: AdminTypes.ADD_LABEL_PIC_REQUEST,\r\n  payload: { name, url },\r\n});\r\n\r\nexport const getOnePicture = (url) => ({\r\n  type: AdminTypes.GET_PICTURE_REQUEST,\r\n  payload: { url },\r\n});\r\n\r\nexport const getLabelPicture = (labels) => ({\r\n  type: AdminTypes.GET_PICTURE_LABEL_REQUEST,\r\n  payload: { labels },\r\n});\r\n\r\nexport const getPictureNotLabel = (labels) => ({\r\n  type: AdminTypes.GET_PICTURE_NOT_LABEL_REQUEST,\r\n  payload: { labels },\r\n});\r\n\r\nexport const editLabelPicture = (labels, url, label) => ({\r\n  type: AdminTypes.EDIT_PICTURE_LABEL_REQUEST,\r\n  payload: { labels, url, label },\r\n});\r\n\r\nexport const getAllPicture = () => ({\r\n  type: AdminTypes.GET_ALL_PICTURE_REQUEST,\r\n  payload: {},\r\n});\r\n\r\nexport const addNewPicture = (name, taken) => ({\r\n  type: AdminTypes.ADD_PICTURE_REQUEST,\r\n  payload: { name, taken },\r\n});\r\n\r\nexport const setAllButPics = (val) => ({\r\n  type: AdminTypes.SET_ALL_BUT_PICS,\r\n  payload: val,\r\n});\r\n\r\nexport const addToCluster = (values, labels) => ({\r\n  type: AdminTypes.ADD_TO_CLUSTER_REQUEST,\r\n  payload: { values, labels },\r\n});\r\n","import * as AdminActions from \"./admin.action\";\r\n\r\n// Export all actions here!\r\nexport { AdminActions };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Modal, Button } from \"antd\";\r\nimport { ReactPictureAnnotation } from \"react-picture-annotation\";\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { AdminActions } from \"../../redux/actions\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst SinglePhotoScreen = (props) => {\r\n  const canvasRef = React.createRef();\r\n  const canvasOverlayRef = React.createRef();\r\n  const history = useHistory();\r\n  const [currentStart, setCurrentStart] = useState([null, null]);\r\n  const [isAnnotation, setIsAnnotation] = useState(true);\r\n  const [url, setUrl] = useState(props.location.state.url);\r\n  const [options, setOptions] = useState([\r\n    { name: \"happy\" },\r\n    { name: \"hell\" },\r\n    { name: \"hello\" },\r\n  ]);\r\n  const [suggestions, setsuggestions] = useState([]);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    props.getLabel();\r\n    props.getOnePicture(url);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isAnnotation) {\r\n      drawImageFunc();\r\n      let ranArray = genArray();\r\n      drawColours(ranArray);\r\n    }\r\n  }, [isAnnotation]);\r\n\r\n  const onChangein = (event, { newValue }) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const drawImageFunc = () => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const img = new Image();\r\n\r\n    img.onload = () => {\r\n      ctx.drawImage(img, 0, 0, ctx.canvas.width, ctx.canvas.height);\r\n    };\r\n    img.src = url;\r\n  };\r\n\r\n  const calculateMousePosition = (positionX, positionY) => {};\r\n\r\n  const drawColours = (randArray) => {\r\n    const canvas = canvasOverlayRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    randArray.map((item, index) => {\r\n      item.map((subitem, subindex) => {\r\n        ctx.beginPath();\r\n        ctx.arc(subindex, index, 1, 0, 2 * Math.PI);\r\n        if (subitem[0] === 0) {\r\n          ctx.fillStyle = \"yellow\";\r\n          ctx.fill();\r\n        } else if (subitem[0] === 1) {\r\n          ctx.fillStyle = \"red\";\r\n          ctx.fill();\r\n        } else if (subitem[0] === 2) {\r\n          ctx.fillStyle = \"blue\";\r\n          ctx.fill();\r\n        }\r\n\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n      });\r\n    });\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setsuggestions(getSuggestions(value));\r\n  };\r\n\r\n  const genArray = () => {\r\n    let finArray = [];\r\n    for (let i = 0; i < 600; i++) {\r\n      let tempArray = [];\r\n      for (let j = 0; j < 800; j++) {\r\n        if (i < 150 && j < 200) {\r\n          tempArray.push([0]);\r\n        } else if (i < 300 && j < 400) {\r\n          tempArray.push([1]);\r\n        } else if (i < 450 && j < 600) {\r\n          tempArray.push([2]);\r\n        } else if (i < 450 && j < 600) {\r\n          tempArray.push([3]);\r\n        } else {\r\n          tempArray.push([4]);\r\n        }\r\n      }\r\n      finArray.push(tempArray);\r\n    }\r\n    return finArray;\r\n  };\r\n\r\n  const onMouseDown = (event) => {\r\n    const { offsetX, offsetY } = event.nativeEvent;\r\n    // const { positionX, positionY } = this.calculateMousePosition(\r\n    //   offsetX,\r\n    //   offsetY\r\n    // );\r\n    setCurrentStart([offsetX, offsetY]);\r\n  };\r\n\r\n  const onMouseMove = (event) => {\r\n    const { offsetX, offsetY } = event.nativeEvent;\r\n    // const { positionX, positionY } = this.calculateMousePosition(\r\n    //   offsetX,\r\n    //   offsetY\r\n    // );\r\n    if (currentStart[0] !== null && currentStart[1] !== null) {\r\n      const canvas = canvasOverlayRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n     \r\n      ctx.beginPath();\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n      const width = offsetX - currentStart[0];\r\n      const height = offsetY - currentStart[1];\r\n      ctx.beginPath();\r\n      ctx.rect(currentStart[0], currentStart[1], width, height);\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    }\r\n  };\r\n\r\n  const onMouseUp = (event) => {\r\n    const { offsetX, offsetY } = event.nativeEvent;\r\n    // const { positionX, positionY } = this.calculateMousePosition(\r\n    //   offsetX,\r\n    //   offsetY\r\n    // );\r\n    // console.log(\"ya\", offsetX, offsetY);\r\n    const canvas = canvasOverlayRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.save();\r\n    setCurrentStart([null, null]);\r\n  };\r\n\r\n  const escapeRegexCharacters = (str) =>\r\n    str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n\r\n  const getSuggestions = (value) => {\r\n    const escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n    if (escapedValue === \"\") {\r\n      return [];\r\n    }\r\n\r\n    const regex = new RegExp(\"^\" + escapedValue, \"i\");\r\n    const suggestions = props.admin.labels.filter((language) =>\r\n      regex.test(language.name)\r\n    );\r\n\r\n    if (suggestions.length === 0) {\r\n      return [{ isAddNew: true }];\r\n    }\r\n\r\n    return suggestions;\r\n  };\r\n\r\n  const onSelect = (selectedId) => console.log(selectedId);\r\n  const onChange = (data) => console.log(data);\r\n  const buttonStuff = () => {\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            setIsAnnotation(true);\r\n          }}\r\n          type={isAnnotation ? \"primary\" : null}\r\n        >\r\n          Annotate\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            setIsAnnotation(false);\r\n          }}\r\n          type={isAnnotation ? null : \"primary\"}\r\n        >\r\n          Mask\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // if (isAnnotation) {\r\n  //   return (\r\n  //     <div style={{ padding: \"5%\" }}>\r\n  //       {buttonStuff()}\r\n  //       <ReactPictureAnnotation\r\n  //         image=\"https://firebasestorage.googleapis.com/v0/b/glass-app-67aa6.appspot.com/o/20210123_130555.jpg?alt=media&token=0406fb48-10a9-4b28-b6b8-1f5a0166d204\"\r\n  //         onSelect={onSelect}\r\n  //         onChange={onChange}\r\n  //         width={800}\r\n  //         height={600}\r\n  //       />\r\n  //     </div>\r\n  //   );\r\n  // } else {\r\n  //   return (\r\n  //     <div style={{ padding: \"5%\" }}>\r\n  //       {buttonStuff()}\r\n\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setsuggestions([]);\r\n  };\r\n\r\n  const getSuggestionValue = (suggestion) => suggestion.name;\r\n  const renderSuggestion = (suggestion) => <div>{suggestion.name}</div>;\r\n\r\n  const onSuggestionSelected = (event, { suggestion }) => {\r\n\r\n    \r\n  };\r\n\r\n  const inputProps = {\r\n    placeholder: \"Type a label\",\r\n    value,\r\n    onChange: onChangein,\r\n  };\r\n  // if (props.admin.loading) {\r\n  // } else {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <div\r\n        id=\"sexy\"\r\n        style={{\r\n          flex: 0.7,\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        {isAnnotation ? (\r\n          <div\r\n            className=\"boom\"\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"25%\",\r\n              left: \"12.5%\",\r\n            }}\r\n          >\r\n            <ReactPictureAnnotation\r\n              image={url}\r\n              onSelect={onSelect}\r\n              onChange={onChange}\r\n              width={600}\r\n              height={450}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"boom\"\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"25%\",\r\n              left: \"12.5%\",\r\n            }}\r\n          >\r\n            <canvas\r\n              id=\"canvas\"\r\n              ref={canvasRef}\r\n              width={600}\r\n              height={450}\r\n              // style={{\r\n              //   backgroundColor: \"rgb(63, 63, 63)\",\r\n              //   border: \"1px solid rgb(214, 214, 214)\",\r\n              // }}\r\n              style={{ backgroundColor: \"black\", position: \"absolute\" }}\r\n            ></canvas>\r\n            <canvas\r\n              id=\"canvas\"\r\n              ref={canvasOverlayRef}\r\n              width={600}\r\n              height={450}\r\n              // style={{\r\n              //   backgroundColor: \"rgb(63, 63, 63)\",\r\n              //   border: \"1px solid rgb(214, 214, 214)\",\r\n              // }}\r\n\r\n              onMouseDown={onMouseDown}\r\n              onMouseMove={onMouseMove}\r\n              onMouseUp={onMouseUp}\r\n              style={{ position: \"absolute\", opacity: 0.6 }}\r\n            ></canvas>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div\r\n        style={{\r\n          flex: 0.3,\r\n          backgroundColor: \"#e1f5fe\",\r\n          height: window.innerHeight,\r\n        }}\r\n      >\r\n        <div>\r\n          <Button\r\n            onClick={() => {\r\n              setIsAnnotation(true);\r\n            }}\r\n            type={isAnnotation ? \"primary\" : null}\r\n          >\r\n            Annotate\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setIsAnnotation(false);\r\n            }}\r\n            type={isAnnotation ? null : \"primary\"}\r\n          >\r\n            Mask\r\n          </Button>\r\n        </div>\r\n        <Autosuggest\r\n          suggestions={suggestions}\r\n          onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n          getSuggestionValue={getSuggestionValue}\r\n          renderSuggestion={renderSuggestion}\r\n          onSuggestionSelected={onSuggestionSelected}\r\n          inputProps={inputProps}\r\n        />\r\n        <Button\r\n          onClick={() => {\r\n            props.addNewLabelPic(value, url);\r\n            setValue(\"\");\r\n          }}\r\n        >\r\n          Add Label\r\n        </Button>\r\n        <div>\r\n          Existing Labels\r\n          <div>\r\n            {props.admin.picture &&\r\n              props.admin.picture.labels &&\r\n              props.admin.picture.labels.map((item, index) => {\r\n                return <Button>{item.name}</Button>;\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { admin: state.admin };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      addNewLabel: AdminActions.addNewLabel,\r\n      getLabel: AdminActions.getLabel,\r\n      addNewLabelPic: AdminActions.addNewLabelPic,\r\n      getOnePicture: AdminActions.getOnePicture,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePhotoScreen);\r\n"],"sourceRoot":""}