{"version":3,"sources":["config/firebase.config.js","redux/reducers/admin.reducer.js","redux/reducers/index.js","apis/base.api.js","apis/routes.js","apis/main.api.js","constants/server.js","services/admin.service.js","redux/sagas/admin.saga.js","redux/sagas/index.js","redux/index.js","redux/configureStore.js","navigation/index.js","App.js","serviceWorker.js","index.js","redux/types/admin.types.js","components/Loading.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initialState","labels","pictures","picture","allPictures","allButPics","loading","err","allReducers","admin","state","action","type","AdminTypes","GET_LABEL_REQUEST","GET_LABEL_SUCCESS","data","GET_LABEL_ERROR","ADD_LABEL_REQUEST","ADD_LABEL_SUCCESS","payload","ADD_LABEL_ERROR","GET_PICTURE_REQUEST","GET_PICTURE_SUCCESS","GET_PICTURE_ERROR","GET_ALL_PICTURE_REQUEST","GET_ALL_PICTURE_SUCCESS","GET_ALL_PICTURE_ERROR","GET_PICTURE_LABEL_REQUEST","GET_PICTURE_LABEL_SUCCESS","GET_PICTURE_LABEL_ERROR","GET_PICTURE_NOT_LABEL_REQUEST","GET_PICTURE_NOT_LABEL_SUCCESS","GET_PICTURE_NOT_LABEL_ERROR","SET_ALL_BUT_PICS","EDIT_PICTURE_LABEL_REQUEST","ADD_TO_CLUSTER_REQUEST","rootReducer","combineReducers","HttpClient","baseURL","_initializeResponseInterceptor","instance","interceptors","response","use","_handleResponse","_handleError","error","Promise","reject","this","axios","create","routes","LABEL","PICTURE","MainApi","addNewLabel","item","post","addNewLabelPic","updateLabel","deleteLabel","getLabel","get","addNewPicture","updatePicture","deletePicture","getOnePicture","getPictureNotLabel","getLabelPicture","getAllPicture","editLabelPicture","addToCluster","AdminService","publicApiService","Container","adminSaga","adminService","call","res","put","console","log","name","url","resone","values","label","userInfo","taken","ADD_PICTURE_SUCCESS","ADD_PICTURE_ERROR","all","takeLatest","ADD_LABEL_PIC_REQUEST","ADD_PICTURE_REQUEST","rootSaga","root","fork","persistConfig","key","storage","whitelist","store","middlewares","enhancers","sagaMiddleware","createSagaMiddleware","push","createLogger","applyMiddleware","createStore","compose","sagasManager","run","configureStore","persistReducer","reducers","persistStore","HomeScreen","lazy","SinglePhotoScreen","ClusteringScreen","Main","fallback","Loading","exact","path","component","App","useEffect","Firebase","initializeApp","style","display","flexDirection","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","UPDATE_LABEL_STATUS_REQUEST","UPDATE_LABEL_STATUS_SUCCESS","UPDATE_LABEL_STATUS_ERROR","DELETE_LABEL_STATUS_REQUEST","DELETE_LABEL_STATUS_SUCCESS","DELETE_LABEL_STATUS_ERROR","EDIT_PICTURE_LABEL_SUCCESS","EDIT_PICTURE_LABEL_ERROR","UPDATE_PICTURE_STATUS_REQUEST","UPDATE_PICTURE_STATUS_SUCCESS","UPDATE_PICTURE_STATUS_ERROR","DELETE_PICTURE_STATUS_REQUEST","DELETE_PICTURE_STATUS_SUCCESS","DELETE_PICTURE_STATUS_ERROR","ADD_TO_CLUSTER_SUCCESS","ADD_TO_CLUSTER_ERROR","minHeight","justifyContent","alignItems","flex"],"mappings":"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","file":"static/js/main.8f60caa8.chunk.js","sourcesContent":["export const config = {\r\n  apiKey: \"AIzaSyCvh6I2EcbbBL-QXIxV8-gG2chX46b9KCE\",\r\n  authDomain: \"glass-app-67aa6.firebaseapp.com\",\r\n  databaseURL: \"https://glass-app-67aa6-default-rtdb.firebaseio.com\",\r\n  projectId: \"glass-app-67aa6\",\r\n  storageBucket: \"glass-app-67aa6.appspot.com\",\r\n  messagingSenderId: \"803059749423\",\r\n  appId: \"1:803059749423:web:b78cac6c944f262d99acda\",\r\n  measurementId: \"G-Z7VHKH88R5\",\r\n};\r\n\r\n// export default config;\r\n","import { AdminTypes } from \"../types\";\r\n\r\nconst initialState = {\r\n  labels: [],\r\n  pictures: [],\r\n  picture: {},\r\n  allPictures: [],\r\n  allButPics: [],\r\n  loading: false,\r\n  err: null,\r\n};\r\n\r\nconst AdminReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AdminTypes.GET_LABEL_REQUEST:\r\n      return { ...state, loading: true, err: null, labels: [] };\r\n    case AdminTypes.GET_LABEL_SUCCESS:\r\n      return { ...state, labels: action.data, loading: false };\r\n    case AdminTypes.GET_LABEL_ERROR:\r\n      return { ...state, loading: false, err: null };\r\n    case AdminTypes.ADD_LABEL_REQUEST:\r\n      return { ...state, loading: true, err: null };\r\n    case AdminTypes.ADD_LABEL_SUCCESS:\r\n      return { ...state, labels: action.payload, loading: false };\r\n    case AdminTypes.ADD_LABEL_ERROR:\r\n      return { ...state, loading: false, err: null };\r\n\r\n    case AdminTypes.GET_PICTURE_REQUEST:\r\n      return { ...state, loading: true, err: null, picture: {} };\r\n    case AdminTypes.GET_PICTURE_SUCCESS:\r\n      return { ...state, picture: action.picture, loading: false };\r\n    case AdminTypes.GET_PICTURE_ERROR:\r\n      return { ...state, loading: false, err: null };\r\n    case AdminTypes.GET_ALL_PICTURE_REQUEST:\r\n      return { ...state, loading: true, err: null, picture: {} };\r\n    case AdminTypes.GET_ALL_PICTURE_SUCCESS:\r\n      return { ...state, allPictures: action.picture, loading: false };\r\n    case AdminTypes.GET_ALL_PICTURE_ERROR:\r\n      return { ...state, loading: false, err: null };\r\n    case AdminTypes.GET_PICTURE_LABEL_REQUEST:\r\n      return { ...state, loading: true, err: null, pictures: [] };\r\n    case AdminTypes.GET_PICTURE_LABEL_SUCCESS:\r\n      return { ...state, pictures: action.picture, loading: false };\r\n    case AdminTypes.GET_PICTURE_LABEL_ERROR:\r\n      return { ...state, loading: false, err: null };\r\n    case AdminTypes.GET_PICTURE_NOT_LABEL_REQUEST:\r\n      return { ...state, loading: true, err: null, allButPics: [] };\r\n    case AdminTypes.GET_PICTURE_NOT_LABEL_SUCCESS:\r\n      return { ...state, allButPics: action.picture, loading: false };\r\n    case AdminTypes.GET_PICTURE_NOT_LABEL_ERROR:\r\n      return { ...state, loading: false, err: null };\r\n    case AdminTypes.SET_ALL_BUT_PICS:\r\n      return { ...state, allButPics: action.payload, loading: false };\r\n\r\n    case AdminTypes.EDIT_PICTURE_LABEL_REQUEST:\r\n      return { ...state, loading: true, err: null };\r\n    case AdminTypes.ADD_TO_CLUSTER_REQUEST:\r\n      return { ...state, loading: true, err: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AdminReducer;\r\n","import { combineReducers, Reducer } from \"redux\";\r\nimport AdminReducer from \"./admin.reducer\";\r\n\r\nconst allReducers = {\r\n  admin: AdminReducer,\r\n};\r\n\r\nconst rootReducer = combineReducers({ ...allReducers });\r\n\r\nexport default rootReducer;\r\n","import axios from \"axios\";\r\n\r\nclass HttpClient {\r\n  constructor(baseURL) {\r\n    this.instance = axios.create({\r\n      baseURL,\r\n    });\r\n\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      this._handleResponse,\r\n      this._handleError\r\n    );\r\n  };\r\n\r\n  _handleResponse = (data) => data;\r\n\r\n  _handleError = (error) => Promise.reject(error);\r\n}\r\n\r\nexport default HttpClient;\r\n","const routes = {\r\n  LABEL: \"/label\",\r\n  PICTURE: \"/picture\",\r\n};\r\n\r\nexport default routes;\r\n","import HttpClient from \"./base.api\";\r\nimport routes from \"./routes\";\r\nimport { SERVER_URI } from \"../constants/server\";\r\n\r\nclass MainApi extends HttpClient {\r\n  constructor() {\r\n    super(`${SERVER_URI}`);\r\n\r\n    // this._initializeResponseInterceptor();\r\n  }\r\n\r\n  // _initializeResponseInterceptor = () => {\r\n  //   this.instance.interceptors.request.use(\r\n  //     this._handleRequest,\r\n  //     this._handleError\r\n  //   );\r\n  // };\r\n\r\n  // _handleRequest = (config) => {\r\n  //   config.headers[\"x-key\"] = API_KEY;\r\n\r\n  //   return config;\r\n  // };\r\n\r\n  addNewLabel = (item) => {\r\n    return this.instance.post(`${routes.LABEL}/add`, item);\r\n  };\r\n\r\n  addNewLabelPic = (item) => {\r\n    return this.instance.post(`${routes.LABEL}/addpic`, item);\r\n  };\r\n\r\n  updateLabel = (item) => {\r\n    return this.instance.post(`${routes.LABEL}/update`, item);\r\n  };\r\n\r\n  deleteLabel = (item) => {\r\n    return this.instance.post(`${routes.LABEL}/delete`, item);\r\n  };\r\n\r\n  getLabel = (item) => {\r\n    return this.instance.get(`${routes.LABEL}/get`, item);\r\n  };\r\n\r\n  addNewPicture = (item) => {\r\n    return this.instance.post(`${routes.PICTURE}/add`, item);\r\n  };\r\n\r\n  updatePicture = (item) => {\r\n    return this.instance.post(`${routes.PICTURE}/update`, item);\r\n  };\r\n\r\n  deletePicture = (item) => {\r\n    return this.instance.post(`${routes.PICTURE}/delete`, item);\r\n  };\r\n\r\n  getOnePicture = (item) => {\r\n    return this.instance.post(`${routes.PICTURE}/getone`, item);\r\n  };\r\n\r\n  getPictureNotLabel = (item) => {\r\n    return this.instance.post(`${routes.PICTURE}/getlabelnot`, item);\r\n  };\r\n\r\n  getLabelPicture = (item) => {\r\n    return this.instance.post(`${routes.PICTURE}/getlabel`, item);\r\n  };\r\n\r\n  getAllPicture = () => {\r\n    return this.instance.post(`${routes.PICTURE}/getall`);\r\n  };\r\n\r\n  editLabelPicture = (item) => {\r\n    return this.instance.post(`${routes.PICTURE}/remlabel`, item);\r\n  };\r\n\r\n  addToCluster = (item) => {\r\n    return this.instance.post(`${routes.PICTURE}/addclus`, item);\r\n  };\r\n}\r\n\r\nexport default MainApi;\r\n","export const SERVER_URI = \"http://18.224.15.40:8009/api\";\r\n// http://15.206.27.206:8009/api\r\n","import { Service, Container } from \"typedi\";\r\nimport { MainApi } from \"../apis\";\r\n\r\nclass AdminService {\r\n  async addNewLabel(type) {\r\n    try {\r\n      const publicApiService = Container.get(MainApi);\r\n      const response = await publicApiService.addNewLabel(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async addNewLabelPic(type) {\r\n    try {\r\n      const publicApiService = Container.get(MainApi);\r\n      const response = await publicApiService.addNewLabelPic(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateLabel(type) {\r\n    try {\r\n      const publicApiService = Container.get(MainApi);\r\n      const response = await publicApiService.updateLabel(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteLabel(type) {\r\n    try {\r\n      const publicApiService = Container.get(MainApi);\r\n      const response = await publicApiService.deleteLabel(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getLabel(type) {\r\n    try {\r\n      const publicApiService = Container.get(MainApi);\r\n      const response = await publicApiService.getLabel(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async addNewPicture(type) {\r\n    try {\r\n      const publicApiService = Container.get(MainApi);\r\n      const response = await publicApiService.addNewPicture(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updatePicture(type) {\r\n    try {\r\n      const publicApiService = Container.get(MainApi);\r\n      const response = await publicApiService.updatePicture(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deletePicture(type) {\r\n    try {\r\n      const publicApiService = Container.get(MainApi);\r\n      const response = await publicApiService.deletePicture(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getOnePicture(type) {\r\n    try {\r\n      const publicApiService = Container.get(MainApi);\r\n      const response = await publicApiService.getOnePicture(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getLabelPicture(type) {\r\n    try {\r\n      const publicApiService = Container.get(MainApi);\r\n      const response = await publicApiService.getLabelPicture(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getPictureNotLabel(type) {\r\n    try {\r\n      const publicApiService = Container.get(MainApi);\r\n      const response = await publicApiService.getPictureNotLabel(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getAllPicture(type) {\r\n    try {\r\n      const publicApiService = Container.get(MainApi);\r\n      const response = await publicApiService.getAllPicture(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async editLabelPicture(type) {\r\n    try {\r\n      const publicApiService = Container.get(MainApi);\r\n      const response = await publicApiService.editLabelPicture(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async addToCluster(type) {\r\n    try {\r\n      const publicApiService = Container.get(MainApi);\r\n      const response = await publicApiService.addToCluster(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default AdminService;\r\n","import { put, call, takeLatest, all } from \"redux-saga/effects\";\r\nimport { Container } from \"typedi\";\r\n\r\nimport { AdminTypes } from \"../types\";\r\nimport { AdminService } from \"../../services\";\r\n\r\nexport function* getLabel(action) {\r\n  const adminService = Container.get(AdminService);\r\n  const {} = action.payload;\r\n  try {\r\n    const res = yield call(adminService.getLabel);\r\n\r\n    yield put({\r\n      type: AdminTypes.GET_LABEL_SUCCESS,\r\n      data: res.data.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"Add items error \", error.response);\r\n    yield put({ type: AdminTypes.GET_LABEL_ERROR, error });\r\n  }\r\n}\r\n\r\nexport function* addNewLabel(action) {\r\n  const adminService = Container.get(AdminService);\r\n  const { name } = action.payload;\r\n  try {\r\n    const resone = yield call(adminService.addNewLabel, {\r\n      name,\r\n    });\r\n\r\n    const res = yield call(adminService.getLabel);\r\n\r\n    yield put({\r\n      type: AdminTypes.GET_LABEL_SUCCESS,\r\n      data: res.data.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"Add items error \", error.response);\r\n    yield put({ type: AdminTypes.GET_LABEL_ERROR, error });\r\n  }\r\n}\r\n\r\nexport function* addNewLabelPic(action) {\r\n  const adminService = Container.get(AdminService);\r\n  const { name, url } = action.payload;\r\n  try {\r\n    const resone = yield call(adminService.addNewLabelPic, {\r\n      name,\r\n      url,\r\n    });\r\n\r\n    const res = yield call(adminService.getLabel);\r\n\r\n    yield put({\r\n      type: AdminTypes.GET_LABEL_SUCCESS,\r\n      data: res.data.data,\r\n    });\r\n    yield put({\r\n      type: AdminTypes.GET_PICTURE_SUCCESS,\r\n      picture: resone.data.picture[0],\r\n    });\r\n  } catch (error) {\r\n    console.log(\"Add items error \", error.response);\r\n    yield put({ type: AdminTypes.GET_LABEL_ERROR, error });\r\n  }\r\n}\r\n\r\nexport function* addToCluster(action) {\r\n  const adminService = Container.get(AdminService);\r\n  const { values, labels } = action.payload;\r\n  try {\r\n    const resone = yield call(adminService.addToCluster, {\r\n      values,\r\n      label: labels[0],\r\n    });\r\n\r\n    const res = yield call(adminService.getLabelPicture, { labels });\r\n\r\n    yield put({\r\n      type: AdminTypes.GET_PICTURE_LABEL_SUCCESS,\r\n      picture: res.data.userInfo,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"Add items error \", error.response);\r\n    yield put({ type: AdminTypes.GET_LABEL_ERROR, error });\r\n  }\r\n}\r\n\r\nexport function* getOnePicture(action) {\r\n  const adminService = Container.get(AdminService);\r\n  const { url } = action.payload;\r\n  try {\r\n    const res = yield call(adminService.getOnePicture, { url });\r\n\r\n    yield put({\r\n      type: AdminTypes.GET_PICTURE_SUCCESS,\r\n      picture: res.data.userInfo[0],\r\n    });\r\n  } catch (error) {\r\n    console.log(\"Add items error \", error.response);\r\n    yield put({ type: AdminTypes.GET_PICTURE_ERROR, error });\r\n  }\r\n}\r\n\r\nexport function* getLabelPicture(action) {\r\n  const adminService = Container.get(AdminService);\r\n  const { labels } = action.payload;\r\n  try {\r\n    const res = yield call(adminService.getLabelPicture, { labels });\r\n\r\n    yield put({\r\n      type: AdminTypes.GET_PICTURE_LABEL_SUCCESS,\r\n      picture: res.data.userInfo,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"Add items error \", error.response);\r\n    yield put({ type: AdminTypes.GET_PICTURE_LABEL_ERROR, error });\r\n  }\r\n}\r\n\r\nexport function* getPictureNotLabel(action) {\r\n  const adminService = Container.get(AdminService);\r\n  const { labels } = action.payload;\r\n  try {\r\n    const res = yield call(adminService.getPictureNotLabel, { labels });\r\n\r\n    yield put({\r\n      type: AdminTypes.GET_PICTURE_NOT_LABEL_SUCCESS,\r\n      picture: res.data.userInfo,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"Add items error \", error.response);\r\n    yield put({ type: AdminTypes.GET_PICTURE_NOT_LABEL_ERROR, error });\r\n  }\r\n}\r\n\r\nexport function* getAllPicture(action) {\r\n  const adminService = Container.get(AdminService);\r\n  const {} = action.payload;\r\n  try {\r\n    const res = yield call(adminService.getAllPicture);\r\n\r\n    yield put({\r\n      type: AdminTypes.GET_ALL_PICTURE_SUCCESS,\r\n      picture: res.data.userInfo,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"Add items error \", error.response);\r\n    yield put({ type: AdminTypes.GET_ALL_PICTURE_ERROR, error });\r\n  }\r\n}\r\n\r\nexport function* editLabelPicture(action) {\r\n  const adminService = Container.get(AdminService);\r\n  const { labels, url, label } = action.payload;\r\n  try {\r\n    const resone = yield call(adminService.editLabelPicture, { url, label });\r\n    const res = yield call(adminService.getLabelPicture, { labels });\r\n\r\n    yield put({\r\n      type: AdminTypes.GET_PICTURE_LABEL_SUCCESS,\r\n      picture: res.data.userInfo,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"Add items error \", error.response);\r\n    yield put({ type: AdminTypes.GET_PICTURE_LABEL_ERROR, error });\r\n  }\r\n}\r\n\r\nexport function* addNewPicture(action) {\r\n  const adminService = Container.get(AdminService);\r\n  const { name, taken } = action.payload;\r\n  try {\r\n    const resone = yield call(adminService.addNewPicture, { name, taken });\r\n\r\n    yield put({\r\n      type: AdminTypes.ADD_PICTURE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"Add items error \", error.response);\r\n    yield put({ type: AdminTypes.ADD_PICTURE_ERROR, error });\r\n  }\r\n}\r\n\r\nexport default function* adminSaga() {\r\n  yield all([\r\n    takeLatest(AdminTypes.GET_LABEL_REQUEST, getLabel),\r\n    takeLatest(AdminTypes.ADD_LABEL_REQUEST, addNewLabel),\r\n    takeLatest(AdminTypes.ADD_LABEL_PIC_REQUEST, addNewLabelPic),\r\n    takeLatest(AdminTypes.GET_PICTURE_REQUEST, getOnePicture),\r\n    takeLatest(AdminTypes.GET_PICTURE_LABEL_REQUEST, getLabelPicture),\r\n    takeLatest(AdminTypes.EDIT_PICTURE_LABEL_REQUEST, editLabelPicture),\r\n    takeLatest(AdminTypes.GET_ALL_PICTURE_REQUEST, getAllPicture),\r\n    takeLatest(AdminTypes.ADD_PICTURE_REQUEST, addNewPicture),\r\n    takeLatest(AdminTypes.GET_PICTURE_NOT_LABEL_REQUEST, getPictureNotLabel),\r\n    takeLatest(AdminTypes.ADD_TO_CLUSTER_REQUEST, addToCluster),\r\n  ]);\r\n}\r\n","import { all, fork } from \"redux-saga/effects\";\r\n\r\n// Sagas\r\nimport adminSaga from \"./admin.saga\";\r\n\r\n// Connect types to sagas\r\nexport const rootSaga = function* root() {\r\n  yield all([fork(adminSaga)]);\r\n};\r\n","import configureStore from \"./configureStore\";\r\nimport reducers from \"./reducers\";\r\nimport { rootSaga } from \"./sagas\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\n// Redux Persist\r\nconst persistConfig = {\r\n  key: \"CarryCare\",\r\n  storage: storage,\r\n  whitelist: [], // which reducer want to store\r\n};\r\nconst finalReducers = persistReducer(persistConfig, reducers);\r\n\r\nconst { store } = configureStore(finalReducers, rootSaga);\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nexport default (rootReducer, rootSaga) => {\r\n  const middlewares = [];\r\n  const enhancers = [];\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  // All Redux Middlewares\r\n  middlewares.push(sagaMiddleware); // Saga Middleware\r\n  middlewares.push(createLogger()); // Redux Logger Middleware\r\n\r\n  // Assemble middlewares\r\n  enhancers.push(applyMiddleware(...middlewares));\r\n\r\n  // Create Redux Store\r\n  const store = createStore(rootReducer, compose(...enhancers));\r\n\r\n  // kick off root saga\r\n  const sagasManager = sagaMiddleware.run(rootSaga);\r\n\r\n  return {\r\n    store,\r\n    sagasManager,\r\n    sagaMiddleware,\r\n  };\r\n};\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst HomeScreen = lazy(() => import(\"../screens/HomeScreen\"));\r\nconst SinglePhotoScreen = lazy(() => import(\"../screens/SinglePhotoScreen\"));\r\nconst ClusteringScreen = lazy(() => import(\"../screens/ClusteringScreen\"));\r\n\r\nconst Main = () => (\r\n  <Suspense fallback={<Loading />}>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={HomeScreen} />\r\n      <Route exact path=\"/single\" component={SinglePhotoScreen} />\r\n      <Route exact path=\"/cluster\" component={ClusteringScreen} />\r\n    </Switch>\r\n  </Suspense>\r\n);\r\n\r\nexport default Main;\r\n","import React, { useEffect } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Firebase from \"firebase\";\r\nimport { config } from \"./config/firebase.config\";\r\n\r\nimport { store } from \"./redux\";\r\nimport Main from \"./navigation\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    Firebase.initializeApp(config);\r\n  }, []);\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        {/* <NavbarCustom /> */}\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <Main />\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const AdminTypes = {\r\n  GET_LABEL_REQUEST: \"@admin/GET_LABEL_REQUEST\",\r\n  GET_LABEL_SUCCESS: \"@admin/GET_LABEL_SUCCESS\",\r\n  GET_LABEL_ERROR: \"@admin/GET_LABEL_ERROR\",\r\n  ADD_LABEL_PIC_REQUEST: \"@admin/ADD_LABEL_PIC_REQUEST\",\r\n  ADD_LABEL_REQUEST: \"@admin/ADD_LABEL_REQUEST\",\r\n  ADD_LABEL_SUCCESS: \"@admin/ADD_LABEL_SUCCESS\",\r\n  ADD_LABEL_ERROR: \"@admin/ADD_LABEL_ERROR\",\r\n  UPDATE_LABEL_STATUS_REQUEST: \"@admin/UPDATE_LABEL_STATUS_REQUEST\",\r\n  UPDATE_LABEL_STATUS_SUCCESS: \"@admin/UPDATE_LABEL_STATUS_SUCCESS\",\r\n  UPDATE_LABEL_STATUS_ERROR: \"@admin/UPDATE_LABEL_STATUS_ERROR\",\r\n  DELETE_LABEL_STATUS_REQUEST: \"@admin/DELETE_LABEL_STATUS_REQUEST\",\r\n  DELETE_LABEL_STATUS_SUCCESS: \"@admin/DELETE_LABEL_STATUS_SUCCESS\",\r\n  DELETE_LABEL_STATUS_ERROR: \"@admin/DELETE_LABEL_STATUS_ERROR\",\r\n\r\n  GET_PICTURE_REQUEST: \"@admin/GET_PICTURE_REQUEST\",\r\n  GET_PICTURE_SUCCESS: \"@admin/GET_PICTURE_SUCCESS\",\r\n  GET_PICTURE_ERROR: \"@admin/GET_PICTURE_ERROR\",\r\n  GET_ALL_PICTURE_REQUEST: \"@admin/GET_ALL_PICTURE_REQUEST\",\r\n  GET_ALL_PICTURE_SUCCESS: \"@admin/GET_ALL_PICTURE_SUCCESS\",\r\n  GET_ALL_PICTURE_ERROR: \"@admin/GET_ALL_PICTURE_ERROR\",\r\n  GET_PICTURE_LABEL_REQUEST: \"@admin/GET_PICTURE_LABEL_REQUEST\",\r\n  GET_PICTURE_LABEL_SUCCESS: \"@admin/GET_PICTURE_LABEL_SUCCESS\",\r\n  GET_PICTURE_LABEL_ERROR: \"@admin/GET_PICTURE_LABEL_ERROR\",\r\n  EDIT_PICTURE_LABEL_REQUEST: \"@admin/EDIT_PICTURE_LABEL_REQUEST\",\r\n  EDIT_PICTURE_LABEL_SUCCESS: \"@admin/EDIT_PICTURE_LABEL_SUCCESS\",\r\n  EDIT_PICTURE_LABEL_ERROR: \"@admin/EDIT_PICTURE_LABEL_ERROR\",\r\n  ADD_PICTURE_REQUEST: \"@admin/ADD_PICTURE_REQUEST\",\r\n  ADD_PICTURE_SUCCESS: \"@admin/ADD_PICTURE_SUCCESS\",\r\n  ADD_PICTURE_ERROR: \"@admin/ADD_PICTURE_ERROR\",\r\n  UPDATE_PICTURE_STATUS_REQUEST: \"@admin/UPDATE_PICTURE_STATUS_REQUEST\",\r\n  UPDATE_PICTURE_STATUS_SUCCESS: \"@admin/UPDATE_PICTURE_STATUS_SUCCESS\",\r\n  UPDATE_PICTURE_STATUS_ERROR: \"@admin/UPDATE_PICTURE_STATUS_ERROR\",\r\n  DELETE_PICTURE_STATUS_REQUEST: \"@admin/DELETE_PICTURE_STATUS_REQUEST\",\r\n  DELETE_PICTURE_STATUS_SUCCESS: \"@admin/DELETE_PICTURE_STATUS_SUCCESS\",\r\n  DELETE_PICTURE_STATUS_ERROR: \"@admin/DELETE_PICTURE_STATUS_ERROR\",\r\n  GET_PICTURE_NOT_LABEL_REQUEST: \"@admin/GET_PICTURE_NOT_LABEL_REQUEST\",\r\n  GET_PICTURE_NOT_LABEL_SUCCESS: \"@admin/GET_PICTURE_NOT_LABEL_SUCCESS\",\r\n  GET_PICTURE_NOT_LABEL_ERROR: \"@admin/GET_PICTURE_NOT_LABEL_ERROR\",\r\n  SET_ALL_BUT_PICS: \"@admin/SET_ALL_BUT_PICS\",\r\n\r\n  ADD_TO_CLUSTER_REQUEST: \"@admin/ADD_TO_CLUSTER_REQUEST\",\r\n  ADD_TO_CLUSTER_SUCCESS: \"@admin/ADD_TO_CLUSTER_SUCCESS\",\r\n  ADD_TO_CLUSTER_ERROR: \"@admin/ADD_TO_CLUSTER_ERROR\",\r\n};\r\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst Loading = () => (\r\n  <div\r\n    style={{\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      minHeight: \"85vh\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    }}\r\n  >\r\n    <Spin style={{ flex: 1 }} />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n"],"sourceRoot":""}